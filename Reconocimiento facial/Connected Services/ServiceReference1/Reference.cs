//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Reconocimiento_facial.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.wsColegioSoap")]
    public interface wsColegioSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] Login(string usuario, string contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> LoginAsync(string usuario, string contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListarUsuario();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarUsuarioAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] AgregarUsuario(string usuario, string contrasena, int tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarUsuarioAsync(string usuario, string contrasena, int tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ActualizarUsuario(int codUsuario, string usuario, string contrasena, int tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ActualizarUsuarioAsync(int codUsuario, string usuario, string contrasena, int tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] EliminarUsuario(int codUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> EliminarUsuarioAsync(int codUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarUsuario(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarUsuarioAsync(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarTipoUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListarTipoUsuario();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarTipoUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarTipoUsuarioAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarTipoUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] AgregarTipoUsuario(string tipoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarTipoUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarTipoUsuarioAsync(string tipoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarTipoUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] EliminarTipoUsuario(int codTipoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarTipoUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> EliminarTipoUsuarioAsync(int codTipoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarTipoUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ActualizarTipoUsuario(int codTipoUsuario, string tipoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarTipoUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ActualizarTipoUsuarioAsync(int codTipoUsuario, string tipoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarTipoUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarTipoUsuario(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarTipoUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarTipoUsuarioAsync(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarPersona", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListarPersona();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarPersona", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarPersonaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarPersona", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] AgregarPersona(string nombres, string apellidos, string tipo, int telefono, string direccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarPersona", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarPersonaAsync(string nombres, string apellidos, string tipo, int telefono, string direccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarPersona", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] EliminarPersona(int codPersona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarPersona", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> EliminarPersonaAsync(int codPersona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarPersona", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ActualizarPersona(int codPersona, string nombres, string apellidos, string tipo, int telefono, string direccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarPersona", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ActualizarPersonaAsync(int codPersona, string nombres, string apellidos, string tipo, int telefono, string direccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarPersona", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarPersona(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarPersona", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarPersonaAsync(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarAsistencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListarAsistencia();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarAsistencia", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarAsistenciaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarAsistencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] AgregarAsistencia(string fecha, string hora, int codPersona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarAsistencia", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarAsistenciaAsync(string fecha, string hora, int codPersona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarAsistencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarAsistencia(string fecha1, string fecha2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarAsistencia", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarAsistenciaAsync(string fecha1, string fecha2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarCoencidencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarCoencidencia(string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarCoencidencia", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarCoencidenciaAsync(string texto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wsColegioSoapChannel : Reconocimiento_facial.ServiceReference1.wsColegioSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wsColegioSoapClient : System.ServiceModel.ClientBase<Reconocimiento_facial.ServiceReference1.wsColegioSoap>, Reconocimiento_facial.ServiceReference1.wsColegioSoap {
        
        public wsColegioSoapClient() {
        }
        
        public wsColegioSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wsColegioSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsColegioSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsColegioSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] Login(string usuario, string contrasena) {
            return base.Channel.Login(usuario, contrasena);
        }
        
        public System.Threading.Tasks.Task<string[]> LoginAsync(string usuario, string contrasena) {
            return base.Channel.LoginAsync(usuario, contrasena);
        }
        
        public System.Data.DataSet ListarUsuario() {
            return base.Channel.ListarUsuario();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarUsuarioAsync() {
            return base.Channel.ListarUsuarioAsync();
        }
        
        public string[] AgregarUsuario(string usuario, string contrasena, int tipo) {
            return base.Channel.AgregarUsuario(usuario, contrasena, tipo);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarUsuarioAsync(string usuario, string contrasena, int tipo) {
            return base.Channel.AgregarUsuarioAsync(usuario, contrasena, tipo);
        }
        
        public string[] ActualizarUsuario(int codUsuario, string usuario, string contrasena, int tipo) {
            return base.Channel.ActualizarUsuario(codUsuario, usuario, contrasena, tipo);
        }
        
        public System.Threading.Tasks.Task<string[]> ActualizarUsuarioAsync(int codUsuario, string usuario, string contrasena, int tipo) {
            return base.Channel.ActualizarUsuarioAsync(codUsuario, usuario, contrasena, tipo);
        }
        
        public string[] EliminarUsuario(int codUsuario) {
            return base.Channel.EliminarUsuario(codUsuario);
        }
        
        public System.Threading.Tasks.Task<string[]> EliminarUsuarioAsync(int codUsuario) {
            return base.Channel.EliminarUsuarioAsync(codUsuario);
        }
        
        public System.Data.DataSet BuscarUsuario(string texto, string criterio) {
            return base.Channel.BuscarUsuario(texto, criterio);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarUsuarioAsync(string texto, string criterio) {
            return base.Channel.BuscarUsuarioAsync(texto, criterio);
        }
        
        public System.Data.DataSet ListarTipoUsuario() {
            return base.Channel.ListarTipoUsuario();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarTipoUsuarioAsync() {
            return base.Channel.ListarTipoUsuarioAsync();
        }
        
        public string[] AgregarTipoUsuario(string tipoUsuario) {
            return base.Channel.AgregarTipoUsuario(tipoUsuario);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarTipoUsuarioAsync(string tipoUsuario) {
            return base.Channel.AgregarTipoUsuarioAsync(tipoUsuario);
        }
        
        public string[] EliminarTipoUsuario(int codTipoUsuario) {
            return base.Channel.EliminarTipoUsuario(codTipoUsuario);
        }
        
        public System.Threading.Tasks.Task<string[]> EliminarTipoUsuarioAsync(int codTipoUsuario) {
            return base.Channel.EliminarTipoUsuarioAsync(codTipoUsuario);
        }
        
        public string[] ActualizarTipoUsuario(int codTipoUsuario, string tipoUsuario) {
            return base.Channel.ActualizarTipoUsuario(codTipoUsuario, tipoUsuario);
        }
        
        public System.Threading.Tasks.Task<string[]> ActualizarTipoUsuarioAsync(int codTipoUsuario, string tipoUsuario) {
            return base.Channel.ActualizarTipoUsuarioAsync(codTipoUsuario, tipoUsuario);
        }
        
        public System.Data.DataSet BuscarTipoUsuario(string texto, string criterio) {
            return base.Channel.BuscarTipoUsuario(texto, criterio);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarTipoUsuarioAsync(string texto, string criterio) {
            return base.Channel.BuscarTipoUsuarioAsync(texto, criterio);
        }
        
        public System.Data.DataSet ListarPersona() {
            return base.Channel.ListarPersona();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarPersonaAsync() {
            return base.Channel.ListarPersonaAsync();
        }
        
        public string[] AgregarPersona(string nombres, string apellidos, string tipo, int telefono, string direccion) {
            return base.Channel.AgregarPersona(nombres, apellidos, tipo, telefono, direccion);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarPersonaAsync(string nombres, string apellidos, string tipo, int telefono, string direccion) {
            return base.Channel.AgregarPersonaAsync(nombres, apellidos, tipo, telefono, direccion);
        }
        
        public string[] EliminarPersona(int codPersona) {
            return base.Channel.EliminarPersona(codPersona);
        }
        
        public System.Threading.Tasks.Task<string[]> EliminarPersonaAsync(int codPersona) {
            return base.Channel.EliminarPersonaAsync(codPersona);
        }
        
        public string[] ActualizarPersona(int codPersona, string nombres, string apellidos, string tipo, int telefono, string direccion) {
            return base.Channel.ActualizarPersona(codPersona, nombres, apellidos, tipo, telefono, direccion);
        }
        
        public System.Threading.Tasks.Task<string[]> ActualizarPersonaAsync(int codPersona, string nombres, string apellidos, string tipo, int telefono, string direccion) {
            return base.Channel.ActualizarPersonaAsync(codPersona, nombres, apellidos, tipo, telefono, direccion);
        }
        
        public System.Data.DataSet BuscarPersona(string texto, string criterio) {
            return base.Channel.BuscarPersona(texto, criterio);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarPersonaAsync(string texto, string criterio) {
            return base.Channel.BuscarPersonaAsync(texto, criterio);
        }
        
        public System.Data.DataSet ListarAsistencia() {
            return base.Channel.ListarAsistencia();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarAsistenciaAsync() {
            return base.Channel.ListarAsistenciaAsync();
        }
        
        public string[] AgregarAsistencia(string fecha, string hora, int codPersona) {
            return base.Channel.AgregarAsistencia(fecha, hora, codPersona);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarAsistenciaAsync(string fecha, string hora, int codPersona) {
            return base.Channel.AgregarAsistenciaAsync(fecha, hora, codPersona);
        }
        
        public System.Data.DataSet BuscarAsistencia(string fecha1, string fecha2) {
            return base.Channel.BuscarAsistencia(fecha1, fecha2);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarAsistenciaAsync(string fecha1, string fecha2) {
            return base.Channel.BuscarAsistenciaAsync(fecha1, fecha2);
        }
        
        public System.Data.DataSet BuscarCoencidencia(string texto) {
            return base.Channel.BuscarCoencidencia(texto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarCoencidenciaAsync(string texto) {
            return base.Channel.BuscarCoencidenciaAsync(texto);
        }
    }
}
